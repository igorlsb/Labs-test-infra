version: '3.8'

services:
  nginx:
    build:
      context: ./nginx
    container_name: nginx-load-balancer
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
      - frontend
      - database
      - grafana
      - prometheus
      - loki
    networks:
      - app_network

  frontend:
    build:
      context: ./frontend
    image: igorlsb/frontend-app:latest
    restart: always
    networks:
      - app_network

  backend:
    build:
      context: ./backend
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    environment:
      - DATABASE_HOST=database
      - DATABASE_USER=admin
      - DATABASE_PASSWORD=adminpass
      - DATABASE_NAME=mydb
    depends_on:
      database:
        condition: service_healthy  
    networks:
      - app_network

  database:
    image: postgres:latest
    build:
      context: ./database
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: adminpass
      POSTGRES_DB: mydb
    healthcheck:  
      test: ["CMD", "pg_isready", "-U", "admin"]
      interval: 5s
      retries: 5
    ports:
      - "5432:5432"
    networks:
      - app_network
    volumes:
      - postgres_data:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
    networks:
      - app_network

  grafana:
    image: grafana/grafana
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus
    networks:
      - app_network

  loki:
    image: grafana/loki:latest
    container_name: loki
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/loki-config.yml
      - loki_data:/loki
    ports:
      - "3100:3100"
    networks:
      - app_network
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    ports:
      - "8080:8080"
    networks:
      - app_network
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro

  nginx-exporter:
    image: nginx/nginx-prometheus-exporter:latest
    container_name: nginx-exporter
    command: "-nginx.scrape-uri=http://nginx:80/stub_status"
    ports:
      - "9113:9113"
    networks:
      - app_network
    depends_on:
      - nginx
networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  prometheus_data:
  grafana_data:
  loki_data:
