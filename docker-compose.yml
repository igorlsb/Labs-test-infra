version: '3.8'

services:
  database:
    image: postgres:latest
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: mydatabase
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app_network

  backend:
    image: igorlsb/backend-app:latest
    deploy:
      replicas: 3
    restart: always
    depends_on:
      - database
    networks:
      - app_network

  frontend:
    image: igorlsb/frontend-app:latest
    restart: always
    ports:
      - "8081:80"  # Alteramos para evitar conflito com NGINX
    depends_on:
      - backend
    networks:
      - app_network

  nginx:
    build:
      context: ./nginx
    container_name: nginx-load-balancer
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - backend
    networks:
      - app_network

  prometheus:
    image: prom/prometheus
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - monitoring_network

  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    networks:
      - monitoring_network

  loki:
    image: grafana/loki:latest
    volumes:
      - ./monitoring/loki-config.yml:/etc/loki/loki-config.yml
    ports:
      - "3100:3100"
    networks:
      - monitoring_network

networks:
  app_network:
    driver: bridge
  monitoring_network:
    driver: bridge

volumes:
  postgres_data:
